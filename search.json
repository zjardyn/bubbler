[{"path":"https://zjardyn.github.io/bubbler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 bubbler authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zjardyn.github.io/bubbler/articles/calc_rel_abund.html","id":"relative-abundance","dir":"Articles","previous_headings":"","what":"Relative abundance","title":"1.1 Calculate relative abundance","text":"default, bubbler calculate relative abundance across samples, \\(N\\) total count ASVs across samples, \\(n_i\\) count given ASV, : \\(\\text{Relative Abundance} = \\frac{1}{N} \\sum_{=1}^{N} \\frac{n_i}{N}\\) often useful visualize data form, see proportional counts samples. Consider following plot:  keep samples proportional total count, certain samples remain dominant others, affect downstream analysis interpreted. Maybe time rarefy data.","code":"# 1. make rel_abund rel_abund  <-  rel_abund_qiime(counts_q,                                 taxa_q,                                 metadata_q,                                taxa_level = \"Genus\")  # 2. modify rel_abund rel_abund_pool <- rel_abund %>%     # pool taxa so that only the 12 most abundant taxa are displayed      pool_taxa(n_taxa = 12, keep_metadata = TRUE)   library(ggplot2)  # 3. plot rel_abund rel_abund_pool %>%     bar_plot()  +      # group samples by body site. free_x removes unwanted white space     facet_wrap(~body_site, scales = \"free_x\" )"},{"path":"https://zjardyn.github.io/bubbler/articles/calc_rel_abund.html","id":"scaling-plots","dir":"Articles","previous_headings":"","what":"Scaling plots","title":"1.1 Calculate relative abundance","text":"can also fill plotting area, better displays within-sample composition, obfuscates -sample proportions. # Grouped relative abundance Filling plotting area equivalent calculating relative abundance groups, \\(J\\) represents various levels grouping variable, : \\(\\text{Relative Abundance Groups} = \\sum_{j=1}^{J} \\left( \\frac{1}{N_j} \\sum_{\\G_j} \\frac{n_i}{N} \\right)\\) calculating grouped relative abundance, proportions within element grouping sum 1, shown plot, , case sample_id.","code":"rel_abund_pool %>%     bar_plot(position = \"fill\")"},{"path":"https://zjardyn.github.io/bubbler/articles/data_import.html","id":"qiime2","dir":"Articles","previous_headings":"","what":"Qiime2","title":"1. Data Import","text":"just ran amplicon sequencing data qiime2, can import asv-table taxonomy artifacts (.qza), optionally, qiime-formatted metadata (.tsv). , show importing, using data “Moving Pictures” Qiime2 tutorial.","code":"# path to qiime-formatted asv counts  counts_q <- system.file(\"extdata\", \"qiime\", \"table-dada2.qza\", package = \"bubbler\")  # path to qiime-formatted taxonomy data  taxa_q <- system.file(\"extdata\", \"qiime\", \"taxonomy.qza\", package = \"bubbler\")  # path to qiime-formatted metadata metadata_q <- system.file(\"extdata\", \"qiime\", \"sample-metadata.tsv\", package = \"bubbler\")  # make a relative abundance table  rel_abund_qiime(counts_q, taxa_q, metadata_q) #> # A tibble: 26,180 × 13 #>    sample_id asv    level taxon rel_abund barcode_sequence body_site  year month #>    <chr>     <chr>  <chr> <chr>     <dbl> <fct>            <fct>     <dbl> <dbl> #>  1 L1S105    33e2c… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  2 L1S105    5656d… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  3 L1S105    7d893… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  4 L1S105    ecf9e… Phyl… Prot…   0       AGTGCGATGCGT     gut        2009     3 #>  5 L1S105    acfe4… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  6 L1S105    80b20… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  7 L1S105    a1b97… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  8 L1S105    d781f… Phyl… Firm…   0       AGTGCGATGCGT     gut        2009     3 #>  9 L1S105    bfbed… Phyl… Firm…   0.00193 AGTGCGATGCGT     gut        2009     3 #> 10 L1S105    90d32… Phyl… Firm…   0.00399 AGTGCGATGCGT     gut        2009     3 #> # ℹ 26,170 more rows #> # ℹ 4 more variables: day <dbl>, subject <fct>, #> #   reported_antibiotic_usage <fct>, days_since_experiment_start <dbl>"},{"path":"https://zjardyn.github.io/bubbler/articles/data_import.html","id":"dada2","dir":"Articles","previous_headings":"","what":"DADA2","title":"1. Data Import","text":"DADA2 allows generate asv-table taxonomic classifications amplicon sequencing data, within R. asv-table ASVs columns (variables) samples rows (observations). taxonomy table taxonomic levels columns ASVs rows. bubbler can import files form .tsv files, optional metadata .tsv well.","code":"# path to asv counts in tab-separated format counts <- system.file(\"extdata\", \"tsv\", \"seqtab.tsv\", package = \"bubbler\")  # path to taxonomy data in tab-separated format taxa <- system.file(\"extdata\", \"tsv\", \"taxa.tsv\", package = \"bubbler\")  # path to metadata in tab-seperated format  metadata <- system.file(\"extdata\", \"tsv\", \"metadata.tsv\", package = \"bubbler\")  # make a relative abundance table rel_abund_tsv(counts, taxa, metadata) #> # A tibble: 200 × 8 #>    sample_id asv   level  taxon         rel_abund Depth Carbon_source Date       #>    <chr>     <chr> <chr>  <chr>             <dbl> <dbl> <chr>         <date>     #>  1 Smp1      ASV1  Phylum Actinomyceto…   6.09e-6    15 Hexadecane    2021-01-21 #>  2 Smp1      ASV2  Phylum Bacillota       1.83e-5    15 Hexadecane    2021-01-21 #>  3 Smp1      ASV3  Phylum Bacillota       4.83e-3    15 Hexadecane    2021-01-21 #>  4 Smp1      ASV4  Phylum Pseudomonado…   5.48e-5    15 Hexadecane    2021-01-21 #>  5 Smp1      ASV5  Phylum Pseudomonado…   6.09e-5    15 Hexadecane    2021-01-21 #>  6 Smp1      ASV6  Phylum Pseudomonado…   7.71e-3    15 Hexadecane    2021-01-21 #>  7 Smp1      ASV7  Phylum Bacteroidota    1.76e-4    15 Hexadecane    2021-01-21 #>  8 Smp1      ASV8  Phylum Bacillota       0          15 Hexadecane    2021-01-21 #>  9 Smp1      ASV9  Phylum Pseudomonado…   0          15 Hexadecane    2021-01-21 #> 10 Smp1      ASV10 Phylum Pseudomonado…   6.09e-6    15 Hexadecane    2021-01-21 #> # ℹ 190 more rows"},{"path":"https://zjardyn.github.io/bubbler/articles/data_import.html","id":"phyloseq","dir":"Articles","previous_headings":"","what":"Phyloseq","title":"1. Data Import","text":"can get data phyloseq object, possible import well. bubbler expects see otu_table tax_table, optionally, sam_data within phyloseq object.","code":"# example phyloseq rel_abund_phy(physeq1,               taxa_data = TRUE,               meta_data = TRUE) #> Loading required package: phyloseq #> # A tibble: 100 × 7 #>    sample_id asv   level  taxon          rel_abund Location Depth #>    <chr>     <chr> <chr>  <chr>              <dbl> <chr>    <int> #>  1 Smp1      ASV1  Phylum Firmicutes       0.00208 C          339 #>  2 Smp1      ASV2  Phylum Actinobacteria   0.0198  C          339 #>  3 Smp1      ASV3  Phylum Actinobacteria   0.0135  C          339 #>  4 Smp1      ASV4  Phylum Firmicutes       0.00665 C          339 #>  5 Smp1      ASV5  Phylum Proteobacteria   0.0104  C          339 #>  6 Smp1      ASV6  Phylum Firmicutes       0.0129  C          339 #>  7 Smp1      ASV7  Phylum Proteobacteria   0.0162  C          339 #>  8 Smp1      ASV8  Phylum Proteobacteria   0.0146  C          339 #>  9 Smp1      ASV9  Phylum Proteobacteria   0.00208 C          339 #> 10 Smp1      ASV10 Phylum Actinobacteria   0.00270 C          339 #> # ℹ 90 more rows"},{"path":"https://zjardyn.github.io/bubbler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zjardyn Liera-Hood. Author, maintainer.","code":""},{"path":"https://zjardyn.github.io/bubbler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liera-Hood Z (2024). bubbler: Generate relative abundance tables amplicon-sequencing data. R package version 0.0.0.9000, https://zjardyn.github.io/bubbler/.","code":"@Manual{,   title = {bubbler: Generate relative abundance tables from amplicon-sequencing data},   author = {Zjardyn Liera-Hood},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://zjardyn.github.io/bubbler/}, }"},{"path":"https://zjardyn.github.io/bubbler/index.html","id":"bubbler","dir":"","previous_headings":"","what":"Generate relative abundance tables from amplicon-sequencing data","title":"Generate relative abundance tables from amplicon-sequencing data","text":"Bubbler makes relative abundance tables visualization amplicon-sequencing (16S/18S rRNA) datasets. Bubbler combines asv counts, taxonomic information, optionally, meta data create stacked barcharts, bubble plots. Bubbler works dada2, qiime2, phyloseq output.","code":""},{"path":"https://zjardyn.github.io/bubbler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate relative abundance tables from amplicon-sequencing data","text":"can install bubbler GitHub : bubbler bubbler workflow typically three steps: 1. Importing data relative abundance table. 2. Modifying rel_abund table. 3. Making ggplot, stacked-bar bubble plot aesthetics. three steps, using tidyverse notation:","code":"if (!requireNamespace(\"devtools\", quietly = TRUE)){     install.packages(\"devtools\") } devtools::install_github(\"zjardyn/bubbler\") library(bubbler) # 1. Import data into rel_abund rel_abund_phy(physeq1) %>%     # 2. Modify  rel_abund; choose a threshold to pool taxa, for plotting     pool_taxa(threshold = 0.01) %>%     # 3. Plot     bar_plot() #> Loading required package: phyloseq"},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab asv table from a physeq object and format to tibble — asv_data_phy","title":"Grab asv table from a physeq object and format to tibble — asv_data_phy","text":"Grab asv table physeq object format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab asv table from a physeq object and format to tibble — asv_data_phy","text":"","code":"asv_data_phy(phy)"},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab asv table from a physeq object and format to tibble — asv_data_phy","text":"phy phyloseq object containing tax_table","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab asv table from a physeq object and format to tibble — asv_data_phy","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab asv table from a physeq object and format to tibble — asv_data_phy","text":"","code":"asv_data_phy(physeq1) #> Loading required package: phyloseq #> # A tibble: 10 × 11 #>    sample_id  ASV1  ASV2  ASV3  ASV4  ASV5  ASV6  ASV7  ASV8  ASV9 ASV10 #>    <chr>     <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> #>  1 Smp1         10    95    65    32    50    62    78    70    10    13 #>  2 Smp2         26    14    95    44    51    57    83    24    55    97 #>  3 Smp3         36    19    26    55    28    94    74     1    60    64 #>  4 Smp4         25    63    73    91    22    53     3    57    64     8 #>  5 Smp5         87    48    75    21    28    19    13    58    49    49 #>  6 Smp6         66    80     6    85    52    56     5    49    46    55 #>  7 Smp7         77    41     6    50    70    81    93    35    66    28 #>  8 Smp8         77    74     7    20    87    89    35    34    79    40 #>  9 Smp9         52    60    40    63    23    14    15    15    73    84 #> 10 Smp10        97    35    10    43    32     7    25     4    75    60"},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","title":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","text":"Grab asv table tsv file format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","text":"","code":"asv_data_tsv(tsv)"},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","text":"tsv character vector specifying path seqtab.tsv","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/asv_data_tsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab asv table from a tsv file and format to tibble — asv_data_tsv","text":"","code":"fpath <- system.file(\"extdata/tsv\", \"seqtab.tsv\", package = \"bubbler\") asv_data_tsv(fpath) #> # A tibble: 10 × 21 #>    sample_id  ASV1  ASV2  ASV3   ASV4  ASV5  ASV6  ASV7  ASV8  ASV9 ASV10 ASV11 #>    <chr>     <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Smp1          1     3   793      9    10  1267    29     0     0     1   290 #>  2 Smp2          0     3     0      0     1     0    91    11     0   317    26 #>  3 Smp3          0     3     0   4948   276     0     2     1    76     5    15 #>  4 Smp4         23     1     2      0     0    18    28     8   117  3464     1 #>  5 Smp5          7    23     2     51     3    19   198    27     2   231   145 #>  6 Smp6          0    15     3      2     0     6     0     0     2   116     1 #>  7 Smp7         10     0     1      3  1866     1    14     9     0     5   563 #>  8 Smp8         60     3     0      0     0     1     0    58  4025     0    78 #>  9 Smp9        173     0     0 123391     2    18    49     1    34    22     3 #> 10 Smp10         0   326     2      0     3     4   206     9    70     1    14 #> # ℹ 9 more variables: ASV12 <dbl>, ASV13 <dbl>, ASV14 <dbl>, ASV15 <dbl>, #> #   ASV16 <dbl>, ASV17 <dbl>, ASV18 <dbl>, ASV19 <dbl>, ASV20 <dbl>"},{"path":"https://zjardyn.github.io/bubbler/reference/choose_n_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose how many taxa to display when plotting — choose_n_taxa","title":"Choose how many taxa to display when plotting — choose_n_taxa","text":"Generates numeric vector threshold display n taxa.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/choose_n_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose how many taxa to display when plotting — choose_n_taxa","text":"","code":"choose_n_taxa(rel_abund_tab, n_taxa = 8)"},{"path":"https://zjardyn.github.io/bubbler/reference/choose_n_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose how many taxa to display when plotting — choose_n_taxa","text":"rel_abund_tab rel_abund table tibble format. n_taxa integer vector number taxa display.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/choose_n_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose how many taxa to display when plotting — choose_n_taxa","text":"numeric vector.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/choose_n_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choose how many taxa to display when plotting — choose_n_taxa","text":"","code":"choose_n_taxa(rel_abund_tab, n_taxa = 8) #> [1] 0.01933472"},{"path":"https://zjardyn.github.io/bubbler/reference/is_q2metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","title":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","text":"Checks see file qiime2 metadata format, ie contains #q2:types line dictating type variable (categorical/numeric)","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/is_q2metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","text":"","code":"is_q2metadata(file)"},{"path":"https://zjardyn.github.io/bubbler/reference/is_q2metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","text":"file path input file, ex: file=\"~/data/moving_pictures/table.qza\"","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/is_q2metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","text":"TRUE/FALSE","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/is_q2metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"checks if metadata is in qiime2 (.tsv) — is_q2metadata","text":"","code":"if (FALSE) metadata<-is_q2metadata(\"q2metadata.tsv\")"},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab metadata from a physeq object and format to tibble — meta_data_phy","title":"Grab metadata from a physeq object and format to tibble — meta_data_phy","text":"Grab metadata physeq object format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab metadata from a physeq object and format to tibble — meta_data_phy","text":"","code":"meta_data_phy(phy)"},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab metadata from a physeq object and format to tibble — meta_data_phy","text":"phy phyloseq object containig sample_data","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab metadata from a physeq object and format to tibble — meta_data_phy","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab metadata from a physeq object and format to tibble — meta_data_phy","text":"","code":"meta_data_phy(physeq1) #> # A tibble: 10 × 3 #>    sample_id Location Depth #>    <chr>     <chr>    <int> #>  1 Smp1      C          339 #>  2 Smp2      C          343 #>  3 Smp3      D          465 #>  4 Smp4      A           89 #>  5 Smp5      D          493 #>  6 Smp6      A          633 #>  7 Smp7      B          769 #>  8 Smp8      D          376 #>  9 Smp9      D          301 #> 10 Smp10     A          925"},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","title":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","text":"Grab metadata table tsv file format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","text":"","code":"meta_data_tsv(tsv)"},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","text":"tsv character vector specifying path metadata.tsv","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/meta_data_tsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab metadata table from a tsv file and format to tibble — meta_data_tsv","text":"","code":"fpath <- system.file(\"extdata/tsv\", \"metadata.tsv\", package = \"bubbler\") meta_data_tsv(fpath) #> # A tibble: 10 × 4 #>    sample_id Depth Carbon_source Date       #>    <chr>     <dbl> <chr>         <date>     #>  1 Smp1         15 Hexadecane    2021-01-21 #>  2 Smp2         19 Hexadecane    2021-12-27 #>  3 Smp3         14 Glucose       2020-04-02 #>  4 Smp4          3 Hexadecane    2021-07-31 #>  5 Smp5         10 Styrene       2019-05-09 #>  6 Smp6         18 Glucose       2020-09-13 #>  7 Smp7         22 Styrene       2020-06-12 #>  8 Smp8         11 Styrene       2021-01-21 #>  9 Smp9          5 Glucose       2021-05-18 #> 10 Smp10        20 Glucose       2019-11-10"},{"path":"https://zjardyn.github.io/bubbler/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://zjardyn.github.io/bubbler/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pool_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Pool taxa according to threshold — pool_taxa","title":"Pool taxa according to threshold — pool_taxa","text":"Applies threshold pools taxa threshold, across samples optionally, across variable.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pool_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pool taxa according to threshold — pool_taxa","text":"","code":"pool_taxa(   rel_abund_tab,   threshold,   n_taxa,   keep_metadata = FALSE,   label = TRUE )"},{"path":"https://zjardyn.github.io/bubbler/reference/pool_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pool taxa according to threshold — pool_taxa","text":"rel_abund_tab rel_abund table tibble format. threshold numeric vector threshold.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pool_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pool taxa according to threshold — pool_taxa","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/pool_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pool taxa according to threshold — pool_taxa","text":"","code":"if (FALSE) pool_taxa(rel_abund_tab, threshold = 0.2, var = \"Location\")"},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2biom.html","id":null,"dir":"Reference","previous_headings":"","what":"read qiime2 biom file (version 2.1) — read_q2biom","title":"read qiime2 biom file (version 2.1) — read_q2biom","text":"Loads version 2.1 spec biom file (http://biom-format.org/documentation/format_versions/biom-2.1.html) expected found within qiime2 artifact.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2biom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read qiime2 biom file (version 2.1) — read_q2biom","text":"","code":"read_q2biom(file)"},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2biom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read qiime2 biom file (version 2.1) — read_q2biom","text":"file path input file, ex: file=\"~/Downloads/3372d9e0-3f1c-43d8-838b-35c7ad6dac89/data/feature-table.biom\"","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read qiime2 biom file (version 2.1) — read_q2biom","text":"matrix values","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2biom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read qiime2 biom file (version 2.1) — read_q2biom","text":"","code":"if (FALSE) metadata<-read_q2biom(\"feature-table.biom\")"},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"read qiime2 metadata (.tsv) — read_q2metadata","title":"read qiime2 metadata (.tsv) — read_q2metadata","text":"Loads qiime2 metadata file wherein 2nd line contains #q2:types line dictating type variable (categorical/numeric)","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read qiime2 metadata (.tsv) — read_q2metadata","text":"","code":"read_q2metadata(file)"},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read qiime2 metadata (.tsv) — read_q2metadata","text":"file path input file, ex: file=\"~/data/moving_pictures/table.qza\"","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read qiime2 metadata (.tsv) — read_q2metadata","text":"data.frame wherein first column SampleID","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_q2metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read qiime2 metadata (.tsv) — read_q2metadata","text":"","code":"if (FALSE) metadata<-read_q2metadata(\"q2metadata.tsv\")"},{"path":"https://zjardyn.github.io/bubbler/reference/read_qza.html","id":null,"dir":"Reference","previous_headings":"","what":"read qiime2 artifacts (.qza) — read_qza","title":"read qiime2 artifacts (.qza) — read_qza","text":"extracts embedded data object metadata R session","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_qza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read qiime2 artifacts (.qza) — read_qza","text":"","code":"read_qza(file, tmp, rm)"},{"path":"https://zjardyn.github.io/bubbler/reference/read_qza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read qiime2 artifacts (.qza) — read_qza","text":"file path input file, ex: file=\"~/data/moving_pictures/table.qza\" tmp temporary directory object decompressed (default=\"tempdir()\") rm decompressed object removed completion function (T/F default=TRUE)","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_qza.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read qiime2 artifacts (.qza) — read_qza","text":"named list.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/read_qza.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read qiime2 artifacts (.qza) — read_qza","text":"","code":"if (FALSE) SVs<-read_qza(\"data/table.qza\")"},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","title":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","text":"Generate relative abundance table tibble format phyloseq object.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","text":"","code":"rel_abund_phy(phy, taxa_data, meta_data, taxa_level, var)"},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","text":"phy phyloseq object containing otu_table tax_table. meta_data logical value specifying metadata included phy. taxa_level character value specifying taxa level Domain species. var character value variable sum .","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a relative abundance table in tibble format from a phyloseq object. — rel_abund_phy","text":"","code":"rel_abund_phy(phy = physeq1, taxa_level = \"Phylum\", var = NULL , meta_data = FALSE) #> # A tibble: 100 × 5 #>    sample_id asv   level  taxon          rel_abund #>    <chr>     <chr> <chr>  <chr>              <dbl> #>  1 Smp1      ASV1  Phylum Firmicutes       0.00208 #>  2 Smp1      ASV2  Phylum Actinobacteria   0.0198  #>  3 Smp1      ASV3  Phylum Actinobacteria   0.0135  #>  4 Smp1      ASV4  Phylum Firmicutes       0.00665 #>  5 Smp1      ASV5  Phylum Proteobacteria   0.0104  #>  6 Smp1      ASV6  Phylum Firmicutes       0.0129  #>  7 Smp1      ASV7  Phylum Proteobacteria   0.0162  #>  8 Smp1      ASV8  Phylum Proteobacteria   0.0146  #>  9 Smp1      ASV9  Phylum Proteobacteria   0.00208 #> 10 Smp1      ASV10 Phylum Actinobacteria   0.00270 #> # ℹ 90 more rows"},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","title":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","text":"Generate relative abundance table tibble format tsv files.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","text":"","code":"rel_abund_tsv(asv, taxa_data, meta_data, taxa_level, var)"},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","text":"asv tsv file path containing asv table. taxa_data tsv file path containing taxa table. meta_data tsv file path containing meta_data table. taxa_level character value specifying taxa level Domain species. var character value variable sum .","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/rel_abund_tsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a relative abundance table in tibble format from tsv files. — rel_abund_tsv","text":"","code":"asv <- system.file(\"extdata/tsv\", \"seqtab.tsv\", package = \"bubbler\") taxa <- system.file(\"extdata/tsv\", \"taxa.tsv\", package = \"bubbler\") meta_data <- system.file(\"extdata/tsv\", \"metadata.tsv\", package = \"bubbler\") rel_abund_tsv(asv, taxa, meta_data) #> # A tibble: 200 × 8 #>    sample_id asv   level  taxon         rel_abund Depth Carbon_source Date       #>    <chr>     <chr> <chr>  <chr>             <dbl> <dbl> <chr>         <date>     #>  1 Smp1      ASV1  Phylum Actinomyceto…   6.09e-6    15 Hexadecane    2021-01-21 #>  2 Smp1      ASV2  Phylum Bacillota       1.83e-5    15 Hexadecane    2021-01-21 #>  3 Smp1      ASV3  Phylum Bacillota       4.83e-3    15 Hexadecane    2021-01-21 #>  4 Smp1      ASV4  Phylum Pseudomonado…   5.48e-5    15 Hexadecane    2021-01-21 #>  5 Smp1      ASV5  Phylum Pseudomonado…   6.09e-5    15 Hexadecane    2021-01-21 #>  6 Smp1      ASV6  Phylum Pseudomonado…   7.71e-3    15 Hexadecane    2021-01-21 #>  7 Smp1      ASV7  Phylum Bacteroidota    1.76e-4    15 Hexadecane    2021-01-21 #>  8 Smp1      ASV8  Phylum Bacillota       0          15 Hexadecane    2021-01-21 #>  9 Smp1      ASV9  Phylum Pseudomonado…   0          15 Hexadecane    2021-01-21 #> 10 Smp1      ASV10 Phylum Pseudomonado…   6.09e-6    15 Hexadecane    2021-01-21 #> # ℹ 190 more rows"},{"path":"https://zjardyn.github.io/bubbler/reference/show_top_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the top taxa of a rel_abund table — show_top_taxa","title":"Show the top taxa of a rel_abund table — show_top_taxa","text":"Finds top taxa arranges descending order. Uses max() find maximum taxon.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/show_top_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the top taxa of a rel_abund table — show_top_taxa","text":"","code":"show_top_taxa(rel_abund_tab)"},{"path":"https://zjardyn.github.io/bubbler/reference/show_top_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the top taxa of a rel_abund table — show_top_taxa","text":"rel_abund_tab rel_abund table tibble format.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/show_top_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the top taxa of a rel_abund table — show_top_taxa","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/show_top_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the top taxa of a rel_abund table — show_top_taxa","text":"","code":"show_top_taxa(rel_abund_tab) #> # A tibble: 3 × 2 #>   taxon             max #>   <chr>           <dbl> #> 1 Actinobacteria 0.0202 #> 2 Firmicutes     0.0202 #> 3 Proteobacteria 0.0193"},{"path":"https://zjardyn.github.io/bubbler/reference/subset_rel_abund.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","title":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","text":"Subset samples rel_abund tibble recompute rel_abund","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/subset_rel_abund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","text":"","code":"subset_rel_abund(rel_abund_tb, var, selection)"},{"path":"https://zjardyn.github.io/bubbler/reference/subset_rel_abund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","text":"var character vector variable subset . selection character vector elements select. rel_abund_tab tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/subset_rel_abund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/subset_rel_abund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset samples from a rel_abund tibble and recompute rel_abund — subset_rel_abund","text":"","code":"smp_selection <- c(\"Smp1\", \"Smp2\", \"Smp3\", \"Smp4\", \"Smp5\") subset_rel_abund(rel_abund_tab, var = \"sample_id\", selection = smp_selection) #> # A tibble: 50 × 7 #>    sample_id asv   rel_abund level  taxon          Location Depth #>    <chr>     <chr>     <dbl> <chr>  <chr>          <chr>    <int> #>  1 Smp1      ASV1    0.00418 Phylum Firmicutes     C          339 #>  2 Smp1      ASV2    0.0397  Phylum Actinobacteria C          339 #>  3 Smp1      ASV3    0.0272  Phylum Actinobacteria C          339 #>  4 Smp1      ASV4    0.0134  Phylum Firmicutes     C          339 #>  5 Smp1      ASV5    0.0209  Phylum Proteobacteria C          339 #>  6 Smp1      ASV6    0.0259  Phylum Firmicutes     C          339 #>  7 Smp1      ASV7    0.0326  Phylum Proteobacteria C          339 #>  8 Smp1      ASV8    0.0292  Phylum Proteobacteria C          339 #>  9 Smp1      ASV9    0.00418 Phylum Proteobacteria C          339 #> 10 Smp1      ASV10   0.00543 Phylum Actinobacteria C          339 #> # ℹ 40 more rows"},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","title":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","text":"Grab taxa table physeq object format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","text":"","code":"taxa_data_phy(phy)"},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","text":"phy phyloseq object containing  tax_table","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_phy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab taxa table from a physeq object and format to tibble — taxa_data_phy","text":"","code":"taxa_data_phy(physeq1) #> # A tibble: 10 × 8 #>    asv   Domain   Phylum         Class               Order  Family Genus Species #>    <chr> <chr>    <chr>          <chr>               <chr>  <chr>  <chr> <chr>   #>  1 ASV1  Bacteria Firmicutes     Clostridia          Clost… Clost… Clos… botuli… #>  2 ASV2  Bacteria Actinobacteria Actinobacteria      Actin… Actin… Acti… israel… #>  3 ASV3  Bacteria Actinobacteria Actinobacteria      Actin… Actin… Acti… israel… #>  4 ASV4  Bacteria Firmicutes     Bacilli             Bacil… Bacil… Baci… subtil… #>  5 ASV5  Bacteria Proteobacteria Alphaproteobacteria Rhizo… Brady… Brad… japoni… #>  6 ASV6  Bacteria Firmicutes     Bacilli             Lacto… Strep… Stre… pneumo… #>  7 ASV7  Bacteria Proteobacteria Gammaproteobacteria Pseud… Pseud… Pseu… aerugi… #>  8 ASV8  Bacteria Proteobacteria Betaproteobacteria  Burkh… Burkh… Burk… cepacia #>  9 ASV9  Bacteria Proteobacteria Betaproteobacteria  Burkh… Burkh… Burk… cepacia #> 10 ASV10 Bacteria Actinobacteria Actinobacteria      Actin… Actin… Acti… israel…"},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","title":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","text":"Grab taxa table tsv file format tibble","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","text":"","code":"taxa_data_tsv(tsv)"},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","text":"tsv character vector specifying path seqtab.tsv","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","text":"tibble.","code":""},{"path":"https://zjardyn.github.io/bubbler/reference/taxa_data_tsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grab taxa table from a tsv file and format to tibble — taxa_data_tsv","text":"","code":"fpath <- system.file(\"extdata/tsv\", \"taxa.tsv\", package = \"bubbler\") taxa_data_tsv(fpath) #> # A tibble: 20 × 7 #>    asv   Domain   Phylum         Class               Order          Family Genus #>    <chr> <chr>    <chr>          <chr>               <chr>          <chr>  <chr> #>  1 ASV1  Bacteria Actinomycetota Actinobacteria      Streptomyceta… Strep… Stre… #>  2 ASV2  Bacteria Bacillota      Bacilli             Caryophanales  Alicy… Alic… #>  3 ASV3  Bacteria Bacillota      Bacilli             Caryophanales  Staph… Stap… #>  4 ASV4  Bacteria Pseudomonadota Gammaproteobacteria Alteromonadal… Alter… Mari… #>  5 ASV5  Bacteria Pseudomonadota Gammaproteobacteria Pseudomonadal… Pseud… Pseu… #>  6 ASV6  Bacteria Pseudomonadota Gammaproteobacteria Vibrionales    Vibri… Alii… #>  7 ASV7  Bacteria Bacteroidota   Flavobacteriia      Flavobacteria… Flavo… Psyc… #>  8 ASV8  Bacteria Bacillota      Bacilli             Lactobacillal… Lacto… Lact… #>  9 ASV9  Bacteria Pseudomonadota Alphaproteobacteria Rickettsiales  Ricke… Rick… #> 10 ASV10 Bacteria Pseudomonadota Gammaproteobacteria Pseudomonadal… Morax… Mora… #> 11 ASV11 Bacteria Pseudomonadota Alphaproteobacteria Caulobacteral… Maric… Mari… #> 12 ASV12 Bacteria Pseudomonadota Gammaproteobacteria Nevskiales     Nevsk… Sini… #> 13 ASV13 Bacteria Bacillota      Bacilli             Lactobacillal… Lacto… Comp… #> 14 ASV14 Bacteria Bacteroidota   Cytophagia          Cytophagales   Cyclo… Algo… #> 15 ASV15 Bacteria Pseudomonadota Gammaproteobacteria Xanthomonadal… Xanth… Lyso… #> 16 ASV16 Bacteria Bacillota      Bacilli             Caryophanales  Bacil… Anae… #> 17 ASV17 Bacteria Bacillota      Clostridia          Eubacteriales  Clost… Clos… #> 18 ASV18 Bacteria Pseudomonadota Gammaproteobacteria Enterobactera… Yersi… Serr… #> 19 ASV19 Bacteria Pseudomonadota Alphaproteobacteria Rhodobacteral… Roseo… Rhod… #> 20 ASV20 Bacteria Synergistota   Synergistia         Synergistales  Dethi… Rari…"}]
